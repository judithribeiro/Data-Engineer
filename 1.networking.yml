Description: VPC

#Todos os recursos da Aws
Resources:
#  VPC - Rede interna da Aws
  Vpc:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: production-common/vpc-production
    Metadata:
      'aws:cdk:path': production-common/vpc-production/Resource
# Dentro de cada região a Aws disponibiliza uma quantidade de Subnet ( Ec2 - Maquina para controlar Rede ) ( Distribur IP para os serviços )
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId: !Ref Vpc
      AvailabilityZone:
        'Fn::Select':
          - 0
          - 'Fn::GetAZs': ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: production-common/vpc-production/PublicSubnet1
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet1/Subnet

  Subnet1RouteTableAssociation: 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  Subnet1EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: production-common/vpc-production/PublicSubnet1
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet1/EIP

  Subnet1NATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        'Fn::GetAtt':
          - Subnet1EIP
          - AllocationId
      SubnetId: !Ref Subnet1
      Tags:
        - Key: Name
          Value: production-common/vpc-production/PublicSubnet1
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet1/NATGateway

  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId: !Ref Vpc
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs': ''
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Public
        - Key: 'aws-cdk:subnet-type'
          Value: Public
        - Key: Name
          Value: production-common/vpc-production/PublicSubnet2
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet2/Subnet
  
  Subnet2RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: production-common/vpc-production/PublicSubnet2
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet2/RouteTable    

  Subnet2EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: production-common/vpc-production/PublicSubnet2
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet2/EIP

  Subnet2NATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        'Fn::GetAtt':
          - Subnet2EIP
          - AllocationId
      SubnetId: !Ref Subnet2
      Tags:
        - Key: Name
          Value: production-common/vpc-production/PublicSubnet2
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet2/NATGateway

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId: !Ref Vpc
      AvailabilityZone:
        'Fn::Select':
          - 1
          - 'Fn::GetAZs': ''
      MapPublicIpOnLaunch: false
      Tags:
        - Key: 'aws-cdk:subnet-name'
          Value: Private
        - Key: 'aws-cdk:subnet-type'
          Value: Private
        - Key: Name
          Value: production-common/vpc-production/PrivateSubnet2
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PrivateSubnet2/Subnet

  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Subnet2RouteTable
      SubnetId: !Ref Subnet2
    Metadata:
      'aws:cdk:path': production-common/vpc-production/PublicSubnet2/RouteTableAssociation

  RDSProductionSubnet:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: place RDS on public subnet
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2
    Metadata:
      'aws:cdk:path': production-common/rds-production-subnet/Default'

# Liberar acesso externo
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: production-common/vpc-production
    Metadata:
      'aws:cdk:path': production-common/vpc-production/IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref Vpc
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: production-common/vpc-production/PrivateSubnet1

  IgwVPCRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable


Outputs: # Saída das dependências ( Depois de criar um recurso exporta a referencia )
  VpcId:
    Value: !Ref Vpc
    Export:
      Name: networking-VpcId

  Subnet1:
    Value: !Ref Subnet1
    Export:
      Name: networking-Subnet1

  Subnet2:
    Value: !Ref Subnet2
    Export:
      Name: networking-Subnet2

  RDSProductionSubnet:
    Value: !Ref RDSProductionSubnet
    Export:
      Name: networking-RDSProductionSubnet


    