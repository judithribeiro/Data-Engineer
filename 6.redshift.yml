Description: Cria um cluster Redshift que é publicamente acessível a partir da internet.

Resources:

  IamProductionRedshiftSpectrumRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: redshift.amazonaws.com
        Version: '2012-10-17'
      Description: Role to allow Redshift to access data lake using spectrum
  
  IamProductionRedshiftSpectrumPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
            - 'glue:*'
            - 'athena:*'
            Effect: Allow
            Resource: '*'
          - Action:
            - 's3:Get*'
            - 's3:List*'
            - 's3:Put*'
            Effect: Allow
            Resource:
              - !ImportValue data-lake-DataLakeImovelRawBucketArn
              - !ImportValue data-lake-DataLakeImovelProcessedBucketArn
              - !ImportValue data-lake-DataLakeImovelCuratedBucketArn
              # - 'Fn::ImportValue': >-
              #   data-lake-DataLakeImovelRawBucketArn
              # - 'Fn::ImportValue': >-
              #   data-lake-DataLakeImovelProcessedBucketArn
              # - 'Fn::ImportValue': >-
              #   data-lake-DataLakeImovelCuratedBucketArn
              - !Join ["/", [!ImportValue data-lake-DataLakeImovelRawBucketArn, "*"]]
              - !Join ["/", [!ImportValue data-lake-DataLakeImovelProcessedBucketArn, "*"]]
              - !Join ["/", [!ImportValue data-lake-DataLakeImovelCuratedBucketArn, "*"]]
              # - 'Fn::Join':
              #   - ''
              #   - - 'Fn::ImportValue': >-
              #     data-lake-DataLakeImovelRawBucketArn
              #     - /*
              # - 'Fn::Join':
              #   - ''
              #   - - 'Fn::ImportValue': >-
              #     data-lake-DataLakeImovelProcessedBucketArn
              #     - /*
              # - 'Fn::Join':
              #   - ''
              #   - - 'Fn::ImportValue': >-
              #     data-lake-DataLakeImovelCuratedBucketArn
              #     - /*
        Version: '2012-10-17'
      PolicyName: iam-production-redshift-spectrum-policy
      Roles:
        - Ref: IamProductionRedshiftSpectrumRole  

  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties:
      AllowVersionUpgrade: true
      AutomatedSnapshotRetentionPeriod: 5
      ClusterIdentifier: dw-production-redshift-cluster
      ClusterParameterGroupName: !Ref RedshiftParameterGroup
      ClusterSubnetGroupName: !Ref RedshiftSubnetGroup
      VpcSecurityGroupIds:
        - !Ref RedshiftEC2SecurityGroup
      ClusterType: multi-node      
      Encrypted: true
      IamRoles:
        - 'Fn::GetAtt':
            - IamProductionRedshiftSpectrumRole
            - Arn
      DBName: dw
      MasterUsername:
        'Fn::Join':
          - ''
          - - '{{resolve:secretsmanager:'
            - Ref: ImovelProductionRedshiftSecret
            - ':SecretString:username::}}'
      MasterUserPassword:
        'Fn::Join':
          - ''
          - - '{{resolve:secretsmanager:'
            - Ref: ImovelProductionRedshiftSecret
            - ':SecretString:password::}}'
      NodeType: dc2.large # https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html
      NumberOfNodes: 2
      PubliclyAccessible: true

  ImovelProductionRedshiftSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      GenerateSecretString:
        ExcludeCharacters: '"@/\ '''
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"admin"}'
    
  ImovelProductionRedshiftSecretAttachment:
    Type: 'AWS::SecretsManager::SecretTargetAttachment'
    Properties:
      SecretId:
        Ref: ImovelProductionRedshiftSecret
      TargetId:
        Ref: RedshiftCluster
      TargetType: 'AWS::Redshift::Cluster'   

  RedshiftSubnetGroup:
    Type: 'AWS::Redshift::ClusterSubnetGroup'
    Properties:
      Description: Redshift Subnet group
      SubnetIds:
        - !Ref RedshiftSubnet

  RedshiftParameterGroup:
    Type: AWS::Redshift::ClusterParameterGroup
    Properties:
      Description: Parameter group for redshift cluster
      ParameterGroupFamily: redshift-1.0
      Parameters:
        - ParameterName: max_concurrency_scaling_clusters
          ParameterValue: 0

  RedshiftVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  RedshiftSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref RedshiftVPC

  RedshiftEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Redshift. Public access
      GroupName: redshift-security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 5439
          IpProtocol: tcp
          ToPort: 5439
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 5439
          IpProtocol: tcp
          ToPort: 5439
      VpcId: !Ref RedshiftVPC

  RedshiftEC2SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt RedshiftEC2SecurityGroup.GroupId
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      SourceSecurityGroupId: !GetAtt RedshiftEC2SecurityGroup.GroupId

  RedshiftVPCInternetGateway:
    Type: AWS::EC2::InternetGateway

  RedshiftVPCAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref RedshiftVPC
      InternetGatewayId: !Ref RedshiftVPCInternetGateway

  RedshiftRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RedshiftVPC

  RedshiftVPCRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref RedshiftVPCInternetGateway
      RouteTableId: !Ref RedshiftRouteTable

  RedshiftSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RedshiftRouteTable
      SubnetId: !Ref RedshiftSubnet

Outputs:
  ImovelProductionRedshiftSecretAttachment:
    Value:
      Ref: ImovelProductionRedshiftSecretAttachment
    Export:
      Name: >-
        production-redshift:ImovelProductionRedshiftSecretAttachment

# Description: Cria um cluster Redshift que é publicamente acessível a partir da internet.

# Resources:

#   RedshiftCluster:
#     Type: AWS::Redshift::Cluster
#     Properties:
#       ClusterType: multi-node
#       DBName: dw
#       MasterUsername:
#         'Fn::Join':
#           - ''
#           - - '{{resolve:secretsmanager:'
#             - Ref: ImovelProductionRedshiftSecret
#             - ':SecretString:username::}}'
#       MasterUserPassword:
#         'Fn::Join':
#           - ''
#           - - '{{resolve:secretsmanager:'
#             - Ref: ImovelProductionRedshiftSecret
#             - ':SecretString:password::}}'
#       NodeType: dc2.large 
#       AllowVersionUpgrade: true
#       AutomatedSnapshotRetentionPeriod: 1      
#       ClusterIdentifier: Imovel-production-redshift
#       ClusterParameterGroupName: !Ref RedshiftParameterGroup
#       ClusterSubnetGroupName: !Ref RedshiftSubnetGroup
#       Encrypted: true      
#       NumberOfNodes: 2
#       PubliclyAccessible: true
#       VpcSecurityGroupIds:
#         - !Ref RedshiftEC2SecurityGroup      

#   RedshiftSubnetGroup:
#     Type: 'AWS::Redshift::ClusterSubnetGroup'
#     Properties:
#       Description: Redshift Subnet group
#       SubnetIds:
#         - 'Fn::ImportValue': >-
#             networking-Subnet1
#         - 'Fn::ImportValue': >-
#             networking-Subnet2

#   RedshiftParameterGroup:
#     Type: AWS::Redshift::ClusterParameterGroup
#     Properties:
#       Description: Parameter group for redshift cluster
#       ParameterGroupFamily: redshift-1.0
#       Parameters:
#         - ParameterName: max_concurrency_scaling_clusters
#           ParameterValue: 0

#   RedshiftEC2SecurityGroup:
#     Type: AWS::EC2::SecurityGroup
#     Properties:
#       GroupDescription: Security group for Redshift. Public access
#       GroupName: redshift-security-group
#       SecurityGroupEgress:
#         - CidrIp: 0.0.0.0/0
#           FromPort: 5439
#           IpProtocol: tcp
#           ToPort: 5439
#       SecurityGroupIngress:
#         - CidrIp: 0.0.0.0/0
#           FromPort: 5439
#           IpProtocol: tcp
#           ToPort: 5439
#       VpcId:
#         'Fn::ImportValue': 'networking-VpcId'

#   RedshiftEC2SecurityGroupIngress:
#     Type: AWS::EC2::SecurityGroupIngress
#     Properties:
#       GroupId: !GetAtt RedshiftEC2SecurityGroup.GroupId
#       IpProtocol: -1
#       FromPort: -1
#       ToPort: -1
#       SourceSecurityGroupId: !GetAtt RedshiftEC2SecurityGroup.GroupId

#   RedshiftVPCAttachGateway:
#     Type: AWS::EC2::VPCGatewayAttachment
#     Properties:
#       VpcId:
#         'Fn::ImportValue': 'networking-VpcId'
#       InternetGatewayId: 
#         'Fn::ImportValue': 'networking-InternetGateway'

#   RedshiftRouteTable:
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId:
#         'Fn::ImportValue': 'networking-VpcId'

#   RedshiftVPCRoute:
#     Type: AWS::EC2::Route
#     Properties:
#       DestinationCidrBlock: 0.0.0.0/0
#       GatewayId: 
#         'Fn::ImportValue': 'networking-InternetGateway'
#       RouteTableId: !Ref RedshiftRouteTable

#   RedshiftSubnetRouteTableAssociation:
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       RouteTableId: !Ref RedshiftRouteTable
#       SubnetId:
#         'Fn::ImportValue': >-
#           networking-Subnet1

#   ImovelProductionRedshiftSecret:
#     Type: 'AWS::SecretsManager::Secret'
#     Properties:
#       GenerateSecretString:
#         ExcludeCharacters: '"@/\ '''
#         GenerateStringKey: password
#         PasswordLength: 30
#         SecretStringTemplate: '{"username":"admin"}'
    
#   ImovelProductionRedshiftSecretAttachment:
#     Type: 'AWS::SecretsManager::SecretTargetAttachment'
#     Properties:
#       SecretId:
#         Ref: ImovelProductionRedshiftSecret
#       TargetId:
#         Ref: RedshiftCluster
#       TargetType: 'AWS::Redshift::Cluster'      

# Outputs:
#   ImovelProductionRedshiftSecretAttachment:
#     Value:
#       Ref: ImovelProductionRedshiftSecretAttachment
#     Export:
#       Name: >-
#         production-redshift:ImovelProductionRedshiftSecretAttachment

    
