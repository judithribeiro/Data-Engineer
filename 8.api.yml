Description: API

Resources:

  IamRoleLambda:
    Type: AWS::IAM::Role
    Properties:
      RoleName: iam-role-lambda-imovel
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: sts:AssumeRole
          -
            Sid: TrustRelationship
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
          -
            Effect: Allow
            Action: lambda:InvokeFunction
            Resource: *

  ApiLambdasFuncitionsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: s3-production-mvp-lambdas
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  LambdaProductionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: production-api/lambda-production-sg
      GroupName: lambda-production-sg
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        Description: Allow all outbound traffic by default
        IpProtocol: "-1"
      VpcId:
        Fn::ImportValue: networking-VpcId      

  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:        
        - python3.8
      Content:
        S3Bucket: !Ref ApiLambdasFuncitionsBucket
        S3Key: lambda_layer.zip
      Description: 'aws-psycopg2'
      LayerName: lambda-postgres-layer
      LicenseInfo: MIT

  LambdaListImoveis:
    Type: AWS::Lambda::Function
    Properties: 
      Code: 
        S3Bucket: !Ref ApiLambdasFuncitionsBucket
        S3Key: lambda_list_imovel.zip
      Description: 'Listagem de imovÃ©is'
      FunctionName: "lambda_function"
      Handler: "lambda_function.lambda_handler"      
      Layers: !Ref LambdaLayer
      MemorySize: 128      
      Role: !Ref IamRoleLambda
      Runtime: "python3.8"
      Tags: 
        - Tag
      Timeout: 30
      TracingConfig: 
        Mode: Active
      VpcConfig: 
        SecurityGroupIds: !Ref LambdaProductionSecurityGroup
        SubnetIds:
          - 'Fn::ImportValue': >-
              networking-Subnet1
          - 'Fn::ImportValue': >-
              networking-Subnet2

  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties: 
      Description: 'api gatway imovel'
      Name: 'imovel-api-gatway'

  ApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties: 
      ParentId: { "Fn::GetAtt": ["ApiGatewayRestApi", "RootResourceId"] }
      PathPart: "imovel"
      RestApiId: !Ref ApiGatewayRestApi 
      
  ApiGatewayIntegrationList:
    Type: AWS::ApiGateway::Method
    Properties: 
      HttpMethod: GET
      Integration: 
        IntegrationHttpMethod: GET
        Uri: !Sub >-          
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaListImoveis.Arn}/invocations
      ResourceId: !Ref ApiGatewayResource
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:       
      RestApiId: !Ref ApiGatewayRestApi      
      StageName: 'production-api-imovel'
